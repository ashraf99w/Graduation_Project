
new.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c06  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000c7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  00000c7a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c7a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000cac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  00000ce8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001e96  00000000  00000000  00000e88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a4a  00000000  00000000  00002d1e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fd8  00000000  00000000  00003768  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000378  00000000  00000000  00004740  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000703  00000000  00000000  00004ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001925  00000000  00000000  000051bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000140  00000000  00000000  00006ae0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 ba 00 	jmp	0x174	; 0x174 <__ctors_end>
   4:	0c 94 c6 03 	jmp	0x78c	; 0x78c <__vector_1>
   8:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
   c:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  10:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  14:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  18:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  1c:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  20:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  24:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  28:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  2c:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  30:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  34:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  38:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  3c:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  40:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  44:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  48:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  4c:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  50:	0c 94 cc 00 	jmp	0x198	; 0x198 <__bad_interrupt>
  54:	da 00       	.word	0x00da	; ????
  56:	f3 00       	.word	0x00f3	; ????
  58:	0c 01       	movw	r0, r24
  5a:	25 01       	movw	r4, r10
  5c:	3d 01       	movw	r6, r26
  5e:	3d 01       	movw	r6, r26
  60:	3d 01       	movw	r6, r26
  62:	3d 01       	movw	r6, r26
  64:	3d 01       	movw	r6, r26
  66:	3d 01       	movw	r6, r26
  68:	3d 01       	movw	r6, r26
  6a:	3d 01       	movw	r6, r26
  6c:	3d 01       	movw	r6, r26
  6e:	3d 01       	movw	r6, r26
  70:	3d 01       	movw	r6, r26
  72:	3d 01       	movw	r6, r26
  74:	3d 01       	movw	r6, r26
  76:	3d 01       	movw	r6, r26
  78:	3d 01       	movw	r6, r26
  7a:	3d 01       	movw	r6, r26
  7c:	3d 01       	movw	r6, r26
  7e:	3d 01       	movw	r6, r26
  80:	3d 01       	movw	r6, r26
  82:	3d 01       	movw	r6, r26
  84:	3d 01       	movw	r6, r26
  86:	3d 01       	movw	r6, r26
  88:	3d 01       	movw	r6, r26
  8a:	3d 01       	movw	r6, r26
  8c:	3d 01       	movw	r6, r26
  8e:	3d 01       	movw	r6, r26
  90:	3d 01       	movw	r6, r26
  92:	3d 01       	movw	r6, r26
  94:	da 00       	.word	0x00da	; ????
  96:	f3 00       	.word	0x00f3	; ????
  98:	0c 01       	movw	r0, r24
  9a:	25 01       	movw	r4, r10
  9c:	4a 01       	movw	r8, r20
  9e:	63 01       	movw	r12, r6
  a0:	7c 01       	movw	r14, r24
  a2:	95 01       	movw	r18, r10
  a4:	ad 01       	movw	r20, r26
  a6:	ad 01       	movw	r20, r26
  a8:	ad 01       	movw	r20, r26
  aa:	ad 01       	movw	r20, r26
  ac:	ad 01       	movw	r20, r26
  ae:	ad 01       	movw	r20, r26
  b0:	ad 01       	movw	r20, r26
  b2:	ad 01       	movw	r20, r26
  b4:	ad 01       	movw	r20, r26
  b6:	ad 01       	movw	r20, r26
  b8:	ad 01       	movw	r20, r26
  ba:	ad 01       	movw	r20, r26
  bc:	ad 01       	movw	r20, r26
  be:	ad 01       	movw	r20, r26
  c0:	ad 01       	movw	r20, r26
  c2:	ad 01       	movw	r20, r26
  c4:	ad 01       	movw	r20, r26
  c6:	ad 01       	movw	r20, r26
  c8:	ad 01       	movw	r20, r26
  ca:	ad 01       	movw	r20, r26
  cc:	ad 01       	movw	r20, r26
  ce:	ad 01       	movw	r20, r26
  d0:	ad 01       	movw	r20, r26
  d2:	ad 01       	movw	r20, r26
  d4:	ad 01       	movw	r20, r26
  d6:	ad 01       	movw	r20, r26
  d8:	ad 01       	movw	r20, r26
  da:	ad 01       	movw	r20, r26
  dc:	4a 01       	movw	r8, r20
  de:	63 01       	movw	r12, r6
  e0:	7c 01       	movw	r14, r24
  e2:	95 01       	movw	r18, r10
  e4:	b9 01       	movw	r22, r18
  e6:	bb 01       	movw	r22, r22
  e8:	bd 01       	movw	r22, r26
  ea:	bf 01       	movw	r22, r30
  ec:	c0 01       	movw	r24, r0
  ee:	c0 01       	movw	r24, r0
  f0:	c0 01       	movw	r24, r0
  f2:	c0 01       	movw	r24, r0
  f4:	c0 01       	movw	r24, r0
  f6:	c0 01       	movw	r24, r0
  f8:	c0 01       	movw	r24, r0
  fa:	c0 01       	movw	r24, r0
  fc:	c0 01       	movw	r24, r0
  fe:	c0 01       	movw	r24, r0
 100:	c0 01       	movw	r24, r0
 102:	c0 01       	movw	r24, r0
 104:	c0 01       	movw	r24, r0
 106:	c0 01       	movw	r24, r0
 108:	c0 01       	movw	r24, r0
 10a:	c0 01       	movw	r24, r0
 10c:	c0 01       	movw	r24, r0
 10e:	c0 01       	movw	r24, r0
 110:	c0 01       	movw	r24, r0
 112:	c0 01       	movw	r24, r0
 114:	c0 01       	movw	r24, r0
 116:	c0 01       	movw	r24, r0
 118:	c0 01       	movw	r24, r0
 11a:	c0 01       	movw	r24, r0
 11c:	c0 01       	movw	r24, r0
 11e:	c0 01       	movw	r24, r0
 120:	c0 01       	movw	r24, r0
 122:	c0 01       	movw	r24, r0
 124:	b9 01       	movw	r22, r18
 126:	bb 01       	movw	r22, r22
 128:	bd 01       	movw	r22, r26
 12a:	bf 01       	movw	r22, r30
 12c:	cc 01       	movw	r24, r24
 12e:	ce 01       	movw	r24, r28
 130:	d0 01       	movw	r26, r0
 132:	d2 01       	movw	r26, r4
 134:	d3 01       	movw	r26, r6
 136:	d3 01       	movw	r26, r6
 138:	d3 01       	movw	r26, r6
 13a:	d3 01       	movw	r26, r6
 13c:	d3 01       	movw	r26, r6
 13e:	d3 01       	movw	r26, r6
 140:	d3 01       	movw	r26, r6
 142:	d3 01       	movw	r26, r6
 144:	d3 01       	movw	r26, r6
 146:	d3 01       	movw	r26, r6
 148:	d3 01       	movw	r26, r6
 14a:	d3 01       	movw	r26, r6
 14c:	d3 01       	movw	r26, r6
 14e:	d3 01       	movw	r26, r6
 150:	d3 01       	movw	r26, r6
 152:	d3 01       	movw	r26, r6
 154:	d3 01       	movw	r26, r6
 156:	d3 01       	movw	r26, r6
 158:	d3 01       	movw	r26, r6
 15a:	d3 01       	movw	r26, r6
 15c:	d3 01       	movw	r26, r6
 15e:	d3 01       	movw	r26, r6
 160:	d3 01       	movw	r26, r6
 162:	d3 01       	movw	r26, r6
 164:	d3 01       	movw	r26, r6
 166:	d3 01       	movw	r26, r6
 168:	d3 01       	movw	r26, r6
 16a:	d3 01       	movw	r26, r6
 16c:	cc 01       	movw	r24, r24
 16e:	ce 01       	movw	r24, r28
 170:	d0 01       	movw	r26, r0
 172:	d2 01       	movw	r26, r4

00000174 <__ctors_end>:
 174:	11 24       	eor	r1, r1
 176:	1f be       	out	0x3f, r1	; 63
 178:	cf e5       	ldi	r28, 0x5F	; 95
 17a:	d8 e0       	ldi	r29, 0x08	; 8
 17c:	de bf       	out	0x3e, r29	; 62
 17e:	cd bf       	out	0x3d, r28	; 61

00000180 <__do_clear_bss>:
 180:	20 e0       	ldi	r18, 0x00	; 0
 182:	a0 e6       	ldi	r26, 0x60	; 96
 184:	b0 e0       	ldi	r27, 0x00	; 0
 186:	01 c0       	rjmp	.+2      	; 0x18a <.do_clear_bss_start>

00000188 <.do_clear_bss_loop>:
 188:	1d 92       	st	X+, r1

0000018a <.do_clear_bss_start>:
 18a:	a1 36       	cpi	r26, 0x61	; 97
 18c:	b2 07       	cpc	r27, r18
 18e:	e1 f7       	brne	.-8      	; 0x188 <.do_clear_bss_loop>
 190:	0e 94 33 02 	call	0x466	; 0x466 <main>
 194:	0c 94 01 06 	jmp	0xc02	; 0xc02 <_exit>

00000198 <__bad_interrupt>:
 198:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000019c <Dio_vSetPinDir>:
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	fc 01       	movw	r30, r24
 1a0:	e1 54       	subi	r30, 0x41	; 65
 1a2:	f1 09       	sbc	r31, r1
 1a4:	e4 32       	cpi	r30, 0x24	; 36
 1a6:	f1 05       	cpc	r31, r1
 1a8:	08 f0       	brcs	.+2      	; 0x1ac <Dio_vSetPinDir+0x10>
 1aa:	67 c0       	rjmp	.+206    	; 0x27a <Dio_vSetPinDir+0xde>
 1ac:	e6 5d       	subi	r30, 0xD6	; 214
 1ae:	ff 4f       	sbci	r31, 0xFF	; 255
 1b0:	0c 94 d8 05 	jmp	0xbb0	; 0xbb0 <__tablejump2__>
 1b4:	41 30       	cpi	r20, 0x01	; 1
 1b6:	59 f4       	brne	.+22     	; 0x1ce <Dio_vSetPinDir+0x32>
 1b8:	2a b3       	in	r18, 0x1a	; 26
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <Dio_vSetPinDir+0x28>
 1c0:	88 0f       	add	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	6a 95       	dec	r22
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <Dio_vSetPinDir+0x24>
 1c8:	82 2b       	or	r24, r18
 1ca:	8a bb       	out	0x1a, r24	; 26
 1cc:	08 95       	ret
 1ce:	2a b3       	in	r18, 0x1a	; 26
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <Dio_vSetPinDir+0x3e>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	6a 95       	dec	r22
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <Dio_vSetPinDir+0x3a>
 1de:	80 95       	com	r24
 1e0:	82 23       	and	r24, r18
 1e2:	8a bb       	out	0x1a, r24	; 26
 1e4:	08 95       	ret
 1e6:	41 30       	cpi	r20, 0x01	; 1
 1e8:	59 f4       	brne	.+22     	; 0x200 <Dio_vSetPinDir+0x64>
 1ea:	27 b3       	in	r18, 0x17	; 23
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <Dio_vSetPinDir+0x5a>
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	6a 95       	dec	r22
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <Dio_vSetPinDir+0x56>
 1fa:	82 2b       	or	r24, r18
 1fc:	87 bb       	out	0x17, r24	; 23
 1fe:	08 95       	ret
 200:	27 b3       	in	r18, 0x17	; 23
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <Dio_vSetPinDir+0x70>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <Dio_vSetPinDir+0x6c>
 210:	80 95       	com	r24
 212:	82 23       	and	r24, r18
 214:	87 bb       	out	0x17, r24	; 23
 216:	08 95       	ret
 218:	41 30       	cpi	r20, 0x01	; 1
 21a:	59 f4       	brne	.+22     	; 0x232 <Dio_vSetPinDir+0x96>
 21c:	24 b3       	in	r18, 0x14	; 20
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	02 c0       	rjmp	.+4      	; 0x228 <Dio_vSetPinDir+0x8c>
 224:	88 0f       	add	r24, r24
 226:	99 1f       	adc	r25, r25
 228:	6a 95       	dec	r22
 22a:	e2 f7       	brpl	.-8      	; 0x224 <Dio_vSetPinDir+0x88>
 22c:	82 2b       	or	r24, r18
 22e:	84 bb       	out	0x14, r24	; 20
 230:	08 95       	ret
 232:	24 b3       	in	r18, 0x14	; 20
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	02 c0       	rjmp	.+4      	; 0x23e <Dio_vSetPinDir+0xa2>
 23a:	88 0f       	add	r24, r24
 23c:	99 1f       	adc	r25, r25
 23e:	6a 95       	dec	r22
 240:	e2 f7       	brpl	.-8      	; 0x23a <Dio_vSetPinDir+0x9e>
 242:	80 95       	com	r24
 244:	82 23       	and	r24, r18
 246:	84 bb       	out	0x14, r24	; 20
 248:	08 95       	ret
 24a:	41 30       	cpi	r20, 0x01	; 1
 24c:	59 f4       	brne	.+22     	; 0x264 <Dio_vSetPinDir+0xc8>
 24e:	21 b3       	in	r18, 0x11	; 17
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	02 c0       	rjmp	.+4      	; 0x25a <Dio_vSetPinDir+0xbe>
 256:	88 0f       	add	r24, r24
 258:	99 1f       	adc	r25, r25
 25a:	6a 95       	dec	r22
 25c:	e2 f7       	brpl	.-8      	; 0x256 <Dio_vSetPinDir+0xba>
 25e:	82 2b       	or	r24, r18
 260:	81 bb       	out	0x11, r24	; 17
 262:	08 95       	ret
 264:	21 b3       	in	r18, 0x11	; 17
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	02 c0       	rjmp	.+4      	; 0x270 <Dio_vSetPinDir+0xd4>
 26c:	88 0f       	add	r24, r24
 26e:	99 1f       	adc	r25, r25
 270:	6a 95       	dec	r22
 272:	e2 f7       	brpl	.-8      	; 0x26c <Dio_vSetPinDir+0xd0>
 274:	80 95       	com	r24
 276:	82 23       	and	r24, r18
 278:	81 bb       	out	0x11, r24	; 17
 27a:	08 95       	ret

0000027c <DIO_vWrite_pin>:
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	fc 01       	movw	r30, r24
 280:	e1 54       	subi	r30, 0x41	; 65
 282:	f1 09       	sbc	r31, r1
 284:	e4 32       	cpi	r30, 0x24	; 36
 286:	f1 05       	cpc	r31, r1
 288:	08 f0       	brcs	.+2      	; 0x28c <DIO_vWrite_pin+0x10>
 28a:	67 c0       	rjmp	.+206    	; 0x35a <DIO_vWrite_pin+0xde>
 28c:	e2 5b       	subi	r30, 0xB2	; 178
 28e:	ff 4f       	sbci	r31, 0xFF	; 255
 290:	0c 94 d8 05 	jmp	0xbb0	; 0xbb0 <__tablejump2__>
 294:	41 30       	cpi	r20, 0x01	; 1
 296:	59 f4       	brne	.+22     	; 0x2ae <DIO_vWrite_pin+0x32>
 298:	2b b3       	in	r18, 0x1b	; 27
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	02 c0       	rjmp	.+4      	; 0x2a4 <DIO_vWrite_pin+0x28>
 2a0:	88 0f       	add	r24, r24
 2a2:	99 1f       	adc	r25, r25
 2a4:	6a 95       	dec	r22
 2a6:	e2 f7       	brpl	.-8      	; 0x2a0 <DIO_vWrite_pin+0x24>
 2a8:	82 2b       	or	r24, r18
 2aa:	8b bb       	out	0x1b, r24	; 27
 2ac:	08 95       	ret
 2ae:	2b b3       	in	r18, 0x1b	; 27
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	02 c0       	rjmp	.+4      	; 0x2ba <DIO_vWrite_pin+0x3e>
 2b6:	88 0f       	add	r24, r24
 2b8:	99 1f       	adc	r25, r25
 2ba:	6a 95       	dec	r22
 2bc:	e2 f7       	brpl	.-8      	; 0x2b6 <DIO_vWrite_pin+0x3a>
 2be:	80 95       	com	r24
 2c0:	82 23       	and	r24, r18
 2c2:	8b bb       	out	0x1b, r24	; 27
 2c4:	08 95       	ret
 2c6:	41 30       	cpi	r20, 0x01	; 1
 2c8:	59 f4       	brne	.+22     	; 0x2e0 <DIO_vWrite_pin+0x64>
 2ca:	28 b3       	in	r18, 0x18	; 24
 2cc:	81 e0       	ldi	r24, 0x01	; 1
 2ce:	90 e0       	ldi	r25, 0x00	; 0
 2d0:	02 c0       	rjmp	.+4      	; 0x2d6 <DIO_vWrite_pin+0x5a>
 2d2:	88 0f       	add	r24, r24
 2d4:	99 1f       	adc	r25, r25
 2d6:	6a 95       	dec	r22
 2d8:	e2 f7       	brpl	.-8      	; 0x2d2 <DIO_vWrite_pin+0x56>
 2da:	82 2b       	or	r24, r18
 2dc:	88 bb       	out	0x18, r24	; 24
 2de:	08 95       	ret
 2e0:	28 b3       	in	r18, 0x18	; 24
 2e2:	81 e0       	ldi	r24, 0x01	; 1
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	02 c0       	rjmp	.+4      	; 0x2ec <DIO_vWrite_pin+0x70>
 2e8:	88 0f       	add	r24, r24
 2ea:	99 1f       	adc	r25, r25
 2ec:	6a 95       	dec	r22
 2ee:	e2 f7       	brpl	.-8      	; 0x2e8 <DIO_vWrite_pin+0x6c>
 2f0:	80 95       	com	r24
 2f2:	82 23       	and	r24, r18
 2f4:	88 bb       	out	0x18, r24	; 24
 2f6:	08 95       	ret
 2f8:	41 30       	cpi	r20, 0x01	; 1
 2fa:	59 f4       	brne	.+22     	; 0x312 <DIO_vWrite_pin+0x96>
 2fc:	25 b3       	in	r18, 0x15	; 21
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	02 c0       	rjmp	.+4      	; 0x308 <DIO_vWrite_pin+0x8c>
 304:	88 0f       	add	r24, r24
 306:	99 1f       	adc	r25, r25
 308:	6a 95       	dec	r22
 30a:	e2 f7       	brpl	.-8      	; 0x304 <DIO_vWrite_pin+0x88>
 30c:	82 2b       	or	r24, r18
 30e:	85 bb       	out	0x15, r24	; 21
 310:	08 95       	ret
 312:	25 b3       	in	r18, 0x15	; 21
 314:	81 e0       	ldi	r24, 0x01	; 1
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	02 c0       	rjmp	.+4      	; 0x31e <DIO_vWrite_pin+0xa2>
 31a:	88 0f       	add	r24, r24
 31c:	99 1f       	adc	r25, r25
 31e:	6a 95       	dec	r22
 320:	e2 f7       	brpl	.-8      	; 0x31a <DIO_vWrite_pin+0x9e>
 322:	80 95       	com	r24
 324:	82 23       	and	r24, r18
 326:	85 bb       	out	0x15, r24	; 21
 328:	08 95       	ret
 32a:	41 30       	cpi	r20, 0x01	; 1
 32c:	59 f4       	brne	.+22     	; 0x344 <DIO_vWrite_pin+0xc8>
 32e:	22 b3       	in	r18, 0x12	; 18
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	02 c0       	rjmp	.+4      	; 0x33a <DIO_vWrite_pin+0xbe>
 336:	88 0f       	add	r24, r24
 338:	99 1f       	adc	r25, r25
 33a:	6a 95       	dec	r22
 33c:	e2 f7       	brpl	.-8      	; 0x336 <DIO_vWrite_pin+0xba>
 33e:	82 2b       	or	r24, r18
 340:	82 bb       	out	0x12, r24	; 18
 342:	08 95       	ret
 344:	22 b3       	in	r18, 0x12	; 18
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	02 c0       	rjmp	.+4      	; 0x350 <DIO_vWrite_pin+0xd4>
 34c:	88 0f       	add	r24, r24
 34e:	99 1f       	adc	r25, r25
 350:	6a 95       	dec	r22
 352:	e2 f7       	brpl	.-8      	; 0x34c <DIO_vWrite_pin+0xd0>
 354:	80 95       	com	r24
 356:	82 23       	and	r24, r18
 358:	82 bb       	out	0x12, r24	; 18
 35a:	08 95       	ret

0000035c <DIO_set_port_direction>:
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	fc 01       	movw	r30, r24
 360:	e1 54       	subi	r30, 0x41	; 65
 362:	f1 09       	sbc	r31, r1
 364:	e4 32       	cpi	r30, 0x24	; 36
 366:	f1 05       	cpc	r31, r1
 368:	58 f4       	brcc	.+22     	; 0x380 <DIO_set_port_direction+0x24>
 36a:	ee 58       	subi	r30, 0x8E	; 142
 36c:	ff 4f       	sbci	r31, 0xFF	; 255
 36e:	0c 94 d8 05 	jmp	0xbb0	; 0xbb0 <__tablejump2__>
 372:	6a bb       	out	0x1a, r22	; 26
 374:	08 95       	ret
 376:	67 bb       	out	0x17, r22	; 23
 378:	08 95       	ret
 37a:	64 bb       	out	0x14, r22	; 20
 37c:	08 95       	ret
 37e:	61 bb       	out	0x11, r22	; 17
 380:	08 95       	ret

00000382 <DIO_write_port>:
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	fc 01       	movw	r30, r24
 386:	e1 54       	subi	r30, 0x41	; 65
 388:	f1 09       	sbc	r31, r1
 38a:	e4 32       	cpi	r30, 0x24	; 36
 38c:	f1 05       	cpc	r31, r1
 38e:	58 f4       	brcc	.+22     	; 0x3a6 <DIO_write_port+0x24>
 390:	ea 56       	subi	r30, 0x6A	; 106
 392:	ff 4f       	sbci	r31, 0xFF	; 255
 394:	0c 94 d8 05 	jmp	0xbb0	; 0xbb0 <__tablejump2__>
 398:	6b bb       	out	0x1b, r22	; 27
 39a:	08 95       	ret
 39c:	68 bb       	out	0x18, r22	; 24
 39e:	08 95       	ret
 3a0:	65 bb       	out	0x15, r22	; 21
 3a2:	08 95       	ret
 3a4:	62 bb       	out	0x12, r22	; 18
 3a6:	08 95       	ret

000003a8 <HC_SR04_INIT_timer1_new>:
		
	}
	
		
		unsigned short  HC_SR04_INIT_timer1_new(unsigned char portname,unsigned char pin)
		{
 3a8:	cf 93       	push	r28
 3aa:	df 93       	push	r29
 3ac:	c8 2f       	mov	r28, r24
 3ae:	d6 2f       	mov	r29, r22
			unsigned short high,a,b;
			unsigned short distance;
			TIFR |= (1<<ICF1);  	/* Clear ICF (Input Capture flag)  */
 3b0:	88 b7       	in	r24, 0x38	; 56
 3b2:	80 62       	ori	r24, 0x20	; 32
 3b4:	88 bf       	out	0x38, r24	; 56
			
			/* Rising edge, noise canceler*/
			Set_bit(TCCR1B,ICNC1);
 3b6:	8e b5       	in	r24, 0x2e	; 46
 3b8:	80 68       	ori	r24, 0x80	; 128
 3ba:	8e bd       	out	0x2e, r24	; 46
			Set_bit(TCCR1B,6);
 3bc:	8e b5       	in	r24, 0x2e	; 46
 3be:	80 64       	ori	r24, 0x40	; 64
 3c0:	8e bd       	out	0x2e, r24	; 46
			
			Dio_vSetPinDir(portname,pin,1);
 3c2:	41 e0       	ldi	r20, 0x01	; 1
 3c4:	8c 2f       	mov	r24, r28
 3c6:	0e 94 ce 00 	call	0x19c	; 0x19c <Dio_vSetPinDir>
			DIO_vWrite_pin(portname,pin,1);
 3ca:	41 e0       	ldi	r20, 0x01	; 1
 3cc:	6d 2f       	mov	r22, r29
 3ce:	8c 2f       	mov	r24, r28
 3d0:	0e 94 3e 01 	call	0x27c	; 0x27c <DIO_vWrite_pin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3d4:	85 e0       	ldi	r24, 0x05	; 5
 3d6:	8a 95       	dec	r24
 3d8:	f1 f7       	brne	.-4      	; 0x3d6 <HC_SR04_INIT_timer1_new+0x2e>
			_delay_us(15);
			DIO_vWrite_pin(portname,pin,0);
 3da:	40 e0       	ldi	r20, 0x00	; 0
 3dc:	6d 2f       	mov	r22, r29
 3de:	8c 2f       	mov	r24, r28
 3e0:	0e 94 3e 01 	call	0x27c	; 0x27c <DIO_vWrite_pin>
			
			
			
			while ((TIFR&(1<<ICF1)) == 0);
 3e4:	08 b6       	in	r0, 0x38	; 56
 3e6:	05 fe       	sbrs	r0, 5
 3e8:	fd cf       	rjmp	.-6      	; 0x3e4 <HC_SR04_INIT_timer1_new+0x3c>
			
			a = ICR1;  		/* Take value of capture register */
 3ea:	46 b5       	in	r20, 0x26	; 38
 3ec:	57 b5       	in	r21, 0x27	; 39
			TIFR |= (1<<ICF1);  	/* Clear ICF flag */
 3ee:	88 b7       	in	r24, 0x38	; 56
 3f0:	80 62       	ori	r24, 0x20	; 32
 3f2:	88 bf       	out	0x38, r24	; 56
			
			Clear_bit(TCCR1B,6); /* Falling edge*/
 3f4:	8e b5       	in	r24, 0x2e	; 46
 3f6:	8f 7b       	andi	r24, 0xBF	; 191
 3f8:	8e bd       	out	0x2e, r24	; 46
			
			while ((TIFR&(1<<ICF1)) == 0);
 3fa:	08 b6       	in	r0, 0x38	; 56
 3fc:	05 fe       	sbrs	r0, 5
 3fe:	fd cf       	rjmp	.-6      	; 0x3fa <HC_SR04_INIT_timer1_new+0x52>
			b = ICR1;  		/* Take value of capture register */
 400:	26 b5       	in	r18, 0x26	; 38
 402:	37 b5       	in	r19, 0x27	; 39
			TIFR = (1<<ICF1);  	/* Clear ICF flag */
 404:	80 e2       	ldi	r24, 0x20	; 32
 406:	88 bf       	out	0x38, r24	; 56
			if ( b > a)
 408:	42 17       	cp	r20, r18
 40a:	53 07       	cpc	r21, r19
 40c:	70 f4       	brcc	.+28     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
			{
				high=b-a;
 40e:	24 1b       	sub	r18, r20
 410:	35 0b       	sbc	r19, r21
				distance=((high*34600)/(F_CPU*2));
 412:	a8 e2       	ldi	r26, 0x28	; 40
 414:	b7 e8       	ldi	r27, 0x87	; 135
 416:	0e 94 de 05 	call	0xbbc	; 0xbbc <__umulhisi3>
 41a:	20 e8       	ldi	r18, 0x80	; 128
 41c:	34 e8       	ldi	r19, 0x84	; 132
 41e:	4e e1       	ldi	r20, 0x1E	; 30
 420:	50 e0       	ldi	r21, 0x00	; 0
 422:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__udivmodsi4>
 426:	c9 01       	movw	r24, r18
 428:	0f c0       	rjmp	.+30     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
				a=b=high=0;
			}
			
			else
			{
				high = (19999-a) + b;
 42a:	24 1b       	sub	r18, r20
 42c:	35 0b       	sbc	r19, r21
 42e:	21 5e       	subi	r18, 0xE1	; 225
 430:	31 4b       	sbci	r19, 0xB1	; 177
				distance=((high*34600)/(F_CPU*2));
 432:	a8 e2       	ldi	r26, 0x28	; 40
 434:	b7 e8       	ldi	r27, 0x87	; 135
 436:	0e 94 de 05 	call	0xbbc	; 0xbbc <__umulhisi3>
 43a:	20 e8       	ldi	r18, 0x80	; 128
 43c:	34 e8       	ldi	r19, 0x84	; 132
 43e:	4e e1       	ldi	r20, 0x1E	; 30
 440:	50 e0       	ldi	r21, 0x00	; 0
 442:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__udivmodsi4>
 446:	c9 01       	movw	r24, r18
				a=b=high=0;	
			}
			
			return distance;
			
 448:	df 91       	pop	r29
 44a:	cf 91       	pop	r28
 44c:	08 95       	ret

0000044e <LED_vInit>:
 44e:	41 e0       	ldi	r20, 0x01	; 1
 450:	0e 94 ce 00 	call	0x19c	; 0x19c <Dio_vSetPinDir>
 454:	08 95       	ret

00000456 <LED_vTurnOn>:
 456:	41 e0       	ldi	r20, 0x01	; 1
 458:	0e 94 3e 01 	call	0x27c	; 0x27c <DIO_vWrite_pin>
 45c:	08 95       	ret

0000045e <LED_vTurnOff>:
 45e:	40 e0       	ldi	r20, 0x00	; 0
 460:	0e 94 3e 01 	call	0x27c	; 0x27c <DIO_vWrite_pin>
 464:	08 95       	ret

00000466 <main>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 466:	2f eb       	ldi	r18, 0xBF	; 191
 468:	87 e2       	ldi	r24, 0x27	; 39
 46a:	99 e0       	ldi	r25, 0x09	; 9
 46c:	21 50       	subi	r18, 0x01	; 1
 46e:	80 40       	sbci	r24, 0x00	; 0
 470:	90 40       	sbci	r25, 0x00	; 0
 472:	e1 f7       	brne	.-8      	; 0x46c <main+0x6>
 474:	00 c0       	rjmp	.+0      	; 0x476 <main+0x10>
 476:	00 00       	nop
{
	 _delay_ms(3000);
   //space_car  is the distance between us and the stationary cars
    unsigned short space_car,BACK_LEFT,BACK_RIGHT; 
	  
	Dio_vSetPinDir('D',2,0);
 478:	40 e0       	ldi	r20, 0x00	; 0
 47a:	62 e0       	ldi	r22, 0x02	; 2
 47c:	84 e4       	ldi	r24, 0x44	; 68
 47e:	0e 94 ce 00 	call	0x19c	; 0x19c <Dio_vSetPinDir>
    LED_vInit('B',0);//INDICATION OF GOOD SPACE TO PARK
 482:	60 e0       	ldi	r22, 0x00	; 0
 484:	82 e4       	ldi	r24, 0x42	; 66
 486:	0e 94 27 02 	call	0x44e	; 0x44e <LED_vInit>
	LED_vInit('c',5);//INDICATION OF TAKING PARKING ACTION
 48a:	65 e0       	ldi	r22, 0x05	; 5
 48c:	83 e6       	ldi	r24, 0x63	; 99
 48e:	0e 94 27 02 	call	0x44e	; 0x44e <LED_vInit>
	LED_vInit('B',1);//INDICATION OF SMALL PLACE
 492:	61 e0       	ldi	r22, 0x01	; 1
 494:	82 e4       	ldi	r24, 0x42	; 66
 496:	0e 94 27 02 	call	0x44e	; 0x44e <LED_vInit>
	LED_vInit('B',2);//FOR BAZZER
 49a:	62 e0       	ldi	r22, 0x02	; 2
 49c:	82 e4       	ldi	r24, 0x42	; 66
 49e:	0e 94 27 02 	call	0x44e	; 0x44e <LED_vInit>
    // to choose the channel of multiplexer
    LED_vInit('c',3);
 4a2:	63 e0       	ldi	r22, 0x03	; 3
 4a4:	83 e6       	ldi	r24, 0x63	; 99
 4a6:	0e 94 27 02 	call	0x44e	; 0x44e <LED_vInit>
    LED_vInit('c',4);
 4aa:	64 e0       	ldi	r22, 0x04	; 4
 4ac:	83 e6       	ldi	r24, 0x63	; 99
 4ae:	0e 94 27 02 	call	0x44e	; 0x44e <LED_vInit>
	// to choose the first channel
	LED_vTurnOff('C',3);
 4b2:	63 e0       	ldi	r22, 0x03	; 3
 4b4:	83 e4       	ldi	r24, 0x43	; 67
 4b6:	0e 94 2f 02 	call	0x45e	; 0x45e <LED_vTurnOff>
	LED_vTurnOff('C',4);
 4ba:	64 e0       	ldi	r22, 0x04	; 4
 4bc:	83 e4       	ldi	r24, 0x43	; 67
 4be:	0e 94 2f 02 	call	0x45e	; 0x45e <LED_vTurnOff>
	 
	 //enable interrupt 0
	 Set_bit(GICR,INT0);
 4c2:	8b b7       	in	r24, 0x3b	; 59
 4c4:	80 64       	ori	r24, 0x40	; 64
 4c6:	8b bf       	out	0x3b, r24	; 59
	 //choose rising edge
	 Set_bit(MCUCR,ISC00);
 4c8:	85 b7       	in	r24, 0x35	; 53
 4ca:	81 60       	ori	r24, 0x01	; 1
 4cc:	85 bf       	out	0x35, r24	; 53
	 Set_bit(MCUCR,ISC01);
 4ce:	85 b7       	in	r24, 0x35	; 53
 4d0:	82 60       	ori	r24, 0x02	; 2
 4d2:	85 bf       	out	0x35, r24	; 53
	 
	
	Timer1_FastPWM_OC1B(-2);
 4d4:	60 e0       	ldi	r22, 0x00	; 0
 4d6:	70 e0       	ldi	r23, 0x00	; 0
 4d8:	80 e0       	ldi	r24, 0x00	; 0
 4da:	90 ec       	ldi	r25, 0xC0	; 192
 4dc:	0e 94 1e 04 	call	0x83c	; 0x83c <Timer1_FastPWM_OC1B>
 4e0:	ef eb       	ldi	r30, 0xBF	; 191
 4e2:	f4 ed       	ldi	r31, 0xD4	; 212
 4e4:	21 e0       	ldi	r18, 0x01	; 1
 4e6:	e1 50       	subi	r30, 0x01	; 1
 4e8:	f0 40       	sbci	r31, 0x00	; 0
 4ea:	20 40       	sbci	r18, 0x00	; 0
 4ec:	e1 f7       	brne	.-8      	; 0x4e6 <main+0x80>
 4ee:	00 c0       	rjmp	.+0      	; 0x4f0 <main+0x8a>
 4f0:	00 00       	nop
	
	_delay_ms(600);
	while(1)
	{  
		     DC_MOTOR('F','A',25);
 4f2:	49 e1       	ldi	r20, 0x19	; 25
 4f4:	61 e4       	ldi	r22, 0x41	; 65
 4f6:	86 e4       	ldi	r24, 0x46	; 70
 4f8:	0e 94 d7 03 	call	0x7ae	; 0x7ae <DC_MOTOR>
		     space_car=HC_SR04_INIT_timer1_new('C',0);
 4fc:	60 e0       	ldi	r22, 0x00	; 0
 4fe:	83 e4       	ldi	r24, 0x43	; 67
 500:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <HC_SR04_INIT_timer1_new>
 504:	e3 ec       	ldi	r30, 0xC3	; 195
 506:	f9 e0       	ldi	r31, 0x09	; 9
 508:	31 97       	sbiw	r30, 0x01	; 1
 50a:	f1 f7       	brne	.-4      	; 0x508 <main+0xa2>
 50c:	00 c0       	rjmp	.+0      	; 0x50e <main+0xa8>
 50e:	00 00       	nop
 510:	0a c0       	rjmp	.+20     	; 0x526 <main+0xc0>
			 _delay_ms(10);
			 while(space_car <= 15)
			 {
				space_car=HC_SR04_INIT_timer1_new('C',0);// uses timer 1	
 512:	60 e0       	ldi	r22, 0x00	; 0
 514:	83 e4       	ldi	r24, 0x43	; 67
 516:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <HC_SR04_INIT_timer1_new>
 51a:	e3 ec       	ldi	r30, 0xC3	; 195
 51c:	f9 e0       	ldi	r31, 0x09	; 9
 51e:	31 97       	sbiw	r30, 0x01	; 1
 520:	f1 f7       	brne	.-4      	; 0x51e <main+0xb8>
 522:	00 c0       	rjmp	.+0      	; 0x524 <main+0xbe>
 524:	00 00       	nop
	while(1)
	{  
		     DC_MOTOR('F','A',25);
		     space_car=HC_SR04_INIT_timer1_new('C',0);
			 _delay_ms(10);
			 while(space_car <= 15)
 526:	80 31       	cpi	r24, 0x10	; 16
 528:	91 05       	cpc	r25, r1
 52a:	98 f3       	brcs	.-26     	; 0x512 <main+0xac>
			 {
				space_car=HC_SR04_INIT_timer1_new('C',0);// uses timer 1	
				  _delay_ms(10);	 	 
			 }
			 
	         sei();
 52c:	78 94       	sei
			 while(space_car > 15)
 52e:	0e c0       	rjmp	.+28     	; 0x54c <main+0xe6>
			 {
				 space_car=HC_SR04_INIT_timer1_new('C',0);// uses timer 1
 530:	60 e0       	ldi	r22, 0x00	; 0
 532:	83 e4       	ldi	r24, 0x43	; 67
 534:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <HC_SR04_INIT_timer1_new>
 538:	e3 ec       	ldi	r30, 0xC3	; 195
 53a:	f9 e0       	ldi	r31, 0x09	; 9
 53c:	31 97       	sbiw	r30, 0x01	; 1
 53e:	f1 f7       	brne	.-4      	; 0x53c <main+0xd6>
 540:	00 c0       	rjmp	.+0      	; 0x542 <main+0xdc>
 542:	00 00       	nop
				 _delay_ms(10);	 
				 if (counter >= 60)
 544:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 548:	2c 33       	cpi	r18, 0x3C	; 60
 54a:	10 f4       	brcc	.+4      	; 0x550 <main+0xea>
				space_car=HC_SR04_INIT_timer1_new('C',0);// uses timer 1	
				  _delay_ms(10);	 	 
			 }
			 
	         sei();
			 while(space_car > 15)
 54c:	40 97       	sbiw	r24, 0x10	; 16
 54e:	80 f7       	brcc	.-32     	; 0x530 <main+0xca>
				 _delay_ms(10);	 
				 if (counter >= 60)
				 break;
				
			 }
			 DC_MOTOR('F','A',0);
 550:	40 e0       	ldi	r20, 0x00	; 0
 552:	61 e4       	ldi	r22, 0x41	; 65
 554:	86 e4       	ldi	r24, 0x46	; 70
 556:	0e 94 d7 03 	call	0x7ae	; 0x7ae <DC_MOTOR>
	         cli();
 55a:	f8 94       	cli
			 /*
			if (space_car <= 15)
			{  	DC_MOTOR('F','A',0);  }
			*/	
			if ( counter >= 4)
 55c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 560:	84 30       	cpi	r24, 0x04	; 4
 562:	08 f4       	brcc	.+2      	; 0x566 <main+0x100>
 564:	91 c0       	rjmp	.+290    	; 0x688 <main+0x222>
			{
				counter=0;
 566:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
				//indication of a good space to bark
				LED_vTurnOn('B',0);
 56a:	60 e0       	ldi	r22, 0x00	; 0
 56c:	82 e4       	ldi	r24, 0x42	; 66
 56e:	0e 94 2b 02 	call	0x456	; 0x456 <LED_vTurnOn>
 572:	ff e3       	ldi	r31, 0x3F	; 63
 574:	2d e0       	ldi	r18, 0x0D	; 13
 576:	83 e0       	ldi	r24, 0x03	; 3
 578:	f1 50       	subi	r31, 0x01	; 1
 57a:	20 40       	sbci	r18, 0x00	; 0
 57c:	80 40       	sbci	r24, 0x00	; 0
 57e:	e1 f7       	brne	.-8      	; 0x578 <main+0x112>
 580:	00 c0       	rjmp	.+0      	; 0x582 <main+0x11c>
 582:	00 00       	nop
				_delay_ms(1000);
				LED_vTurnOff('B',0);
 584:	60 e0       	ldi	r22, 0x00	; 0
 586:	82 e4       	ldi	r24, 0x42	; 66
 588:	0e 94 2f 02 	call	0x45e	; 0x45e <LED_vTurnOff>
				
				
				//TO CHOOSE CHANNEL 1
				LED_vTurnOn('C',4);
 58c:	64 e0       	ldi	r22, 0x04	; 4
 58e:	83 e4       	ldi	r24, 0x43	; 67
 590:	0e 94 2b 02 	call	0x456	; 0x456 <LED_vTurnOn>
 594:	9f e3       	ldi	r25, 0x3F	; 63
 596:	ed e0       	ldi	r30, 0x0D	; 13
 598:	f3 e0       	ldi	r31, 0x03	; 3
 59a:	91 50       	subi	r25, 0x01	; 1
 59c:	e0 40       	sbci	r30, 0x00	; 0
 59e:	f0 40       	sbci	r31, 0x00	; 0
 5a0:	e1 f7       	brne	.-8      	; 0x59a <main+0x134>
 5a2:	00 c0       	rjmp	.+0      	; 0x5a4 <main+0x13e>
 5a4:	00 00       	nop
				_delay_ms(1000);
			
	            Timer1_FastPWM_OC1B(60);		
 5a6:	60 e0       	ldi	r22, 0x00	; 0
 5a8:	70 e0       	ldi	r23, 0x00	; 0
 5aa:	80 e7       	ldi	r24, 0x70	; 112
 5ac:	92 e4       	ldi	r25, 0x42	; 66
 5ae:	0e 94 1e 04 	call	0x83c	; 0x83c <Timer1_FastPWM_OC1B>
 5b2:	2f ed       	ldi	r18, 0xDF	; 223
 5b4:	82 e2       	ldi	r24, 0x22	; 34
 5b6:	92 e0       	ldi	r25, 0x02	; 2
 5b8:	21 50       	subi	r18, 0x01	; 1
 5ba:	80 40       	sbci	r24, 0x00	; 0
 5bc:	90 40       	sbci	r25, 0x00	; 0
 5be:	e1 f7       	brne	.-8      	; 0x5b8 <main+0x152>
 5c0:	00 c0       	rjmp	.+0      	; 0x5c2 <main+0x15c>
 5c2:	00 00       	nop
				_delay_ms(700);
				DC_MOTOR('B','A',30);
 5c4:	4e e1       	ldi	r20, 0x1E	; 30
 5c6:	61 e4       	ldi	r22, 0x41	; 65
 5c8:	82 e4       	ldi	r24, 0x42	; 66
 5ca:	0e 94 d7 03 	call	0x7ae	; 0x7ae <DC_MOTOR>
				BACK_RIGHT= HC_SR04_INIT_timer1_new('C',1);
 5ce:	61 e0       	ldi	r22, 0x01	; 1
 5d0:	83 e4       	ldi	r24, 0x43	; 67
 5d2:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <HC_SR04_INIT_timer1_new>
 5d6:	e3 ec       	ldi	r30, 0xC3	; 195
 5d8:	f9 e0       	ldi	r31, 0x09	; 9
 5da:	31 97       	sbiw	r30, 0x01	; 1
 5dc:	f1 f7       	brne	.-4      	; 0x5da <main+0x174>
 5de:	00 c0       	rjmp	.+0      	; 0x5e0 <main+0x17a>
 5e0:	00 00       	nop
 5e2:	0a c0       	rjmp	.+20     	; 0x5f8 <main+0x192>
				
				// executed
				
				while(BACK_RIGHT >= 20)
				{
					BACK_RIGHT= HC_SR04_INIT_timer1_new('C',1);
 5e4:	61 e0       	ldi	r22, 0x01	; 1
 5e6:	83 e4       	ldi	r24, 0x43	; 67
 5e8:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <HC_SR04_INIT_timer1_new>
 5ec:	e3 ec       	ldi	r30, 0xC3	; 195
 5ee:	f9 e0       	ldi	r31, 0x09	; 9
 5f0:	31 97       	sbiw	r30, 0x01	; 1
 5f2:	f1 f7       	brne	.-4      	; 0x5f0 <main+0x18a>
 5f4:	00 c0       	rjmp	.+0      	; 0x5f6 <main+0x190>
 5f6:	00 00       	nop
				BACK_RIGHT= HC_SR04_INIT_timer1_new('C',1);
				_delay_ms(10);
				
				// executed
				
				while(BACK_RIGHT >= 20)
 5f8:	44 97       	sbiw	r24, 0x14	; 20
 5fa:	a0 f7       	brcc	.-24     	; 0x5e4 <main+0x17e>
					_delay_ms(10);	
				}

				
                
		        DC_MOTOR('B','A',0);
 5fc:	40 e0       	ldi	r20, 0x00	; 0
 5fe:	61 e4       	ldi	r22, 0x41	; 65
 600:	82 e4       	ldi	r24, 0x42	; 66
 602:	0e 94 d7 03 	call	0x7ae	; 0x7ae <DC_MOTOR>
 606:	ff e3       	ldi	r31, 0x3F	; 63
 608:	2d e0       	ldi	r18, 0x0D	; 13
 60a:	83 e0       	ldi	r24, 0x03	; 3
 60c:	f1 50       	subi	r31, 0x01	; 1
 60e:	20 40       	sbci	r18, 0x00	; 0
 610:	80 40       	sbci	r24, 0x00	; 0
 612:	e1 f7       	brne	.-8      	; 0x60c <main+0x1a6>
 614:	00 c0       	rjmp	.+0      	; 0x616 <main+0x1b0>
 616:	00 00       	nop
				_delay_ms(1000);
				
				Timer1_FastPWM_OC1B(-60);
 618:	60 e0       	ldi	r22, 0x00	; 0
 61a:	70 e0       	ldi	r23, 0x00	; 0
 61c:	80 e7       	ldi	r24, 0x70	; 112
 61e:	92 ec       	ldi	r25, 0xC2	; 194
 620:	0e 94 1e 04 	call	0x83c	; 0x83c <Timer1_FastPWM_OC1B>
 624:	9f e3       	ldi	r25, 0x3F	; 63
 626:	ed e0       	ldi	r30, 0x0D	; 13
 628:	f3 e0       	ldi	r31, 0x03	; 3
 62a:	91 50       	subi	r25, 0x01	; 1
 62c:	e0 40       	sbci	r30, 0x00	; 0
 62e:	f0 40       	sbci	r31, 0x00	; 0
 630:	e1 f7       	brne	.-8      	; 0x62a <main+0x1c4>
 632:	00 c0       	rjmp	.+0      	; 0x634 <main+0x1ce>
 634:	00 00       	nop
				_delay_ms(1000);
				
				//HERE YOU SHOULD CHOOSE CHANNEL 3
				LED_vTurnOff('C',4);
 636:	64 e0       	ldi	r22, 0x04	; 4
 638:	83 e4       	ldi	r24, 0x43	; 67
 63a:	0e 94 2f 02 	call	0x45e	; 0x45e <LED_vTurnOff>
				LED_vTurnOn('C',3);
 63e:	63 e0       	ldi	r22, 0x03	; 3
 640:	83 e4       	ldi	r24, 0x43	; 67
 642:	0e 94 2b 02 	call	0x456	; 0x456 <LED_vTurnOn>
			
				BACK_LEFT=HC_SR04_INIT_timer1_new('C',2);
 646:	62 e0       	ldi	r22, 0x02	; 2
 648:	83 e4       	ldi	r24, 0x43	; 67
 64a:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <HC_SR04_INIT_timer1_new>
 64e:	e3 ec       	ldi	r30, 0xC3	; 195
 650:	f9 e0       	ldi	r31, 0x09	; 9
 652:	31 97       	sbiw	r30, 0x01	; 1
 654:	f1 f7       	brne	.-4      	; 0x652 <main+0x1ec>
 656:	00 c0       	rjmp	.+0      	; 0x658 <main+0x1f2>
 658:	00 00       	nop
 65a:	13 c0       	rjmp	.+38     	; 0x682 <main+0x21c>
				_delay_ms(10);
		        
				while(BACK_LEFT >= 11)
				{
					DC_MOTOR('B','A',30);
 65c:	4e e1       	ldi	r20, 0x1E	; 30
 65e:	61 e4       	ldi	r22, 0x41	; 65
 660:	82 e4       	ldi	r24, 0x42	; 66
 662:	0e 94 d7 03 	call	0x7ae	; 0x7ae <DC_MOTOR>
					LED_vTurnOn('C',5);
 666:	65 e0       	ldi	r22, 0x05	; 5
 668:	83 e4       	ldi	r24, 0x43	; 67
 66a:	0e 94 2b 02 	call	0x456	; 0x456 <LED_vTurnOn>
 66e:	83 ec       	ldi	r24, 0xC3	; 195
 670:	99 e0       	ldi	r25, 0x09	; 9
 672:	01 97       	sbiw	r24, 0x01	; 1
 674:	f1 f7       	brne	.-4      	; 0x672 <main+0x20c>
 676:	00 c0       	rjmp	.+0      	; 0x678 <main+0x212>
 678:	00 00       	nop
					_delay_ms(10);
					BACK_LEFT=HC_SR04_INIT_timer1_new('C',2);
 67a:	62 e0       	ldi	r22, 0x02	; 2
 67c:	83 e4       	ldi	r24, 0x43	; 67
 67e:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <HC_SR04_INIT_timer1_new>
				LED_vTurnOn('C',3);
			
				BACK_LEFT=HC_SR04_INIT_timer1_new('C',2);
				_delay_ms(10);
		        
				while(BACK_LEFT >= 11)
 682:	0b 97       	sbiw	r24, 0x0b	; 11
 684:	58 f7       	brcc	.-42     	; 0x65c <main+0x1f6>
 686:	14 c0       	rjmp	.+40     	; 0x6b0 <main+0x24a>
			 
		  
			}
		else
		{
			counter=0;
 688:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
			LED_vTurnOn('B',1);
 68c:	61 e0       	ldi	r22, 0x01	; 1
 68e:	82 e4       	ldi	r24, 0x42	; 66
 690:	0e 94 2b 02 	call	0x456	; 0x456 <LED_vTurnOn>
 694:	8f e7       	ldi	r24, 0x7F	; 127
 696:	9a e1       	ldi	r25, 0x1A	; 26
 698:	e6 e0       	ldi	r30, 0x06	; 6
 69a:	81 50       	subi	r24, 0x01	; 1
 69c:	90 40       	sbci	r25, 0x00	; 0
 69e:	e0 40       	sbci	r30, 0x00	; 0
 6a0:	e1 f7       	brne	.-8      	; 0x69a <main+0x234>
 6a2:	00 c0       	rjmp	.+0      	; 0x6a4 <main+0x23e>
 6a4:	00 00       	nop
			_delay_ms(2000);
			LED_vTurnOff('B',1);
 6a6:	61 e0       	ldi	r22, 0x01	; 1
 6a8:	82 e4       	ldi	r24, 0x42	; 66
 6aa:	0e 94 2f 02 	call	0x45e	; 0x45e <LED_vTurnOff>
			
		}
	 
	 
	 
	}
 6ae:	21 cf       	rjmp	.-446    	; 0x4f2 <main+0x8c>
					LED_vTurnOn('C',5);
					_delay_ms(10);
					BACK_LEFT=HC_SR04_INIT_timer1_new('C',2);
					
				}
				DC_MOTOR('B','A',0);
 6b0:	40 e0       	ldi	r20, 0x00	; 0
 6b2:	61 e4       	ldi	r22, 0x41	; 65
 6b4:	82 e4       	ldi	r24, 0x42	; 66
 6b6:	0e 94 d7 03 	call	0x7ae	; 0x7ae <DC_MOTOR>
 6ba:	9f e3       	ldi	r25, 0x3F	; 63
 6bc:	ed e0       	ldi	r30, 0x0D	; 13
 6be:	f3 e0       	ldi	r31, 0x03	; 3
 6c0:	91 50       	subi	r25, 0x01	; 1
 6c2:	e0 40       	sbci	r30, 0x00	; 0
 6c4:	f0 40       	sbci	r31, 0x00	; 0
 6c6:	e1 f7       	brne	.-8      	; 0x6c0 <main+0x25a>
 6c8:	00 c0       	rjmp	.+0      	; 0x6ca <main+0x264>
 6ca:	00 00       	nop
					_delay_ms(10);
				}
				*/
				//DC_MOTOR('F','A',0);
				_delay_ms(1000);
				Timer1_FastPWM_OC1B(-2);
 6cc:	60 e0       	ldi	r22, 0x00	; 0
 6ce:	70 e0       	ldi	r23, 0x00	; 0
 6d0:	80 e0       	ldi	r24, 0x00	; 0
 6d2:	90 ec       	ldi	r25, 0xC0	; 192
 6d4:	0e 94 1e 04 	call	0x83c	; 0x83c <Timer1_FastPWM_OC1B>
 6d8:	2f e3       	ldi	r18, 0x3F	; 63
 6da:	8d e0       	ldi	r24, 0x0D	; 13
 6dc:	93 e0       	ldi	r25, 0x03	; 3
 6de:	21 50       	subi	r18, 0x01	; 1
 6e0:	80 40       	sbci	r24, 0x00	; 0
 6e2:	90 40       	sbci	r25, 0x00	; 0
 6e4:	e1 f7       	brne	.-8      	; 0x6de <main+0x278>
 6e6:	00 c0       	rjmp	.+0      	; 0x6e8 <main+0x282>
 6e8:	00 00       	nop
				_delay_ms(1000); 
				
				//buzzer on/off
				LED_vTurnOn('B',2);
 6ea:	62 e0       	ldi	r22, 0x02	; 2
 6ec:	82 e4       	ldi	r24, 0x42	; 66
 6ee:	0e 94 2b 02 	call	0x456	; 0x456 <LED_vTurnOn>
 6f2:	ef e9       	ldi	r30, 0x9F	; 159
 6f4:	f6 e8       	ldi	r31, 0x86	; 134
 6f6:	21 e0       	ldi	r18, 0x01	; 1
 6f8:	e1 50       	subi	r30, 0x01	; 1
 6fa:	f0 40       	sbci	r31, 0x00	; 0
 6fc:	20 40       	sbci	r18, 0x00	; 0
 6fe:	e1 f7       	brne	.-8      	; 0x6f8 <main+0x292>
 700:	00 c0       	rjmp	.+0      	; 0x702 <main+0x29c>
 702:	00 00       	nop
				_delay_ms(500);
				LED_vTurnOff('B',2);
 704:	62 e0       	ldi	r22, 0x02	; 2
 706:	82 e4       	ldi	r24, 0x42	; 66
 708:	0e 94 2f 02 	call	0x45e	; 0x45e <LED_vTurnOff>
 70c:	8f e9       	ldi	r24, 0x9F	; 159
 70e:	96 e8       	ldi	r25, 0x86	; 134
 710:	e1 e0       	ldi	r30, 0x01	; 1
 712:	81 50       	subi	r24, 0x01	; 1
 714:	90 40       	sbci	r25, 0x00	; 0
 716:	e0 40       	sbci	r30, 0x00	; 0
 718:	e1 f7       	brne	.-8      	; 0x712 <main+0x2ac>
 71a:	00 c0       	rjmp	.+0      	; 0x71c <main+0x2b6>
 71c:	00 00       	nop
				_delay_ms(500);
		 
				LED_vTurnOn('B',2);
 71e:	62 e0       	ldi	r22, 0x02	; 2
 720:	82 e4       	ldi	r24, 0x42	; 66
 722:	0e 94 2b 02 	call	0x456	; 0x456 <LED_vTurnOn>
 726:	ff e9       	ldi	r31, 0x9F	; 159
 728:	26 e8       	ldi	r18, 0x86	; 134
 72a:	81 e0       	ldi	r24, 0x01	; 1
 72c:	f1 50       	subi	r31, 0x01	; 1
 72e:	20 40       	sbci	r18, 0x00	; 0
 730:	80 40       	sbci	r24, 0x00	; 0
 732:	e1 f7       	brne	.-8      	; 0x72c <main+0x2c6>
 734:	00 c0       	rjmp	.+0      	; 0x736 <main+0x2d0>
 736:	00 00       	nop
				_delay_ms(500);
				LED_vTurnOff('B',2);
 738:	62 e0       	ldi	r22, 0x02	; 2
 73a:	82 e4       	ldi	r24, 0x42	; 66
 73c:	0e 94 2f 02 	call	0x45e	; 0x45e <LED_vTurnOff>
 740:	9f e9       	ldi	r25, 0x9F	; 159
 742:	e6 e8       	ldi	r30, 0x86	; 134
 744:	f1 e0       	ldi	r31, 0x01	; 1
 746:	91 50       	subi	r25, 0x01	; 1
 748:	e0 40       	sbci	r30, 0x00	; 0
 74a:	f0 40       	sbci	r31, 0x00	; 0
 74c:	e1 f7       	brne	.-8      	; 0x746 <main+0x2e0>
 74e:	00 c0       	rjmp	.+0      	; 0x750 <main+0x2ea>
 750:	00 00       	nop
				_delay_ms(500);
		  
				LED_vTurnOn('B',2);
 752:	62 e0       	ldi	r22, 0x02	; 2
 754:	82 e4       	ldi	r24, 0x42	; 66
 756:	0e 94 2b 02 	call	0x456	; 0x456 <LED_vTurnOn>
 75a:	2f e9       	ldi	r18, 0x9F	; 159
 75c:	86 e8       	ldi	r24, 0x86	; 134
 75e:	91 e0       	ldi	r25, 0x01	; 1
 760:	21 50       	subi	r18, 0x01	; 1
 762:	80 40       	sbci	r24, 0x00	; 0
 764:	90 40       	sbci	r25, 0x00	; 0
 766:	e1 f7       	brne	.-8      	; 0x760 <main+0x2fa>
 768:	00 c0       	rjmp	.+0      	; 0x76a <main+0x304>
 76a:	00 00       	nop
				_delay_ms(500);
				LED_vTurnOff('B',2);
 76c:	62 e0       	ldi	r22, 0x02	; 2
 76e:	82 e4       	ldi	r24, 0x42	; 66
 770:	0e 94 2f 02 	call	0x45e	; 0x45e <LED_vTurnOff>
 774:	ef e9       	ldi	r30, 0x9F	; 159
 776:	f6 e8       	ldi	r31, 0x86	; 134
 778:	21 e0       	ldi	r18, 0x01	; 1
 77a:	e1 50       	subi	r30, 0x01	; 1
 77c:	f0 40       	sbci	r31, 0x00	; 0
 77e:	20 40       	sbci	r18, 0x00	; 0
 780:	e1 f7       	brne	.-8      	; 0x77a <main+0x314>
 782:	00 c0       	rjmp	.+0      	; 0x784 <main+0x31e>
 784:	00 00       	nop
	 
	 
	 
	}
				   
}
 786:	80 e0       	ldi	r24, 0x00	; 0
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	08 95       	ret

0000078c <__vector_1>:


ISR(INT0_vect)
{
 78c:	1f 92       	push	r1
 78e:	0f 92       	push	r0
 790:	0f b6       	in	r0, 0x3f	; 63
 792:	0f 92       	push	r0
 794:	11 24       	eor	r1, r1
 796:	8f 93       	push	r24
	counter++;
 798:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 79c:	8f 5f       	subi	r24, 0xFF	; 255
 79e:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
	//while(Read_bit(PIND,2) == 1);
	
}
 7a2:	8f 91       	pop	r24
 7a4:	0f 90       	pop	r0
 7a6:	0f be       	out	0x3f, r0	; 63
 7a8:	0f 90       	pop	r0
 7aa:	1f 90       	pop	r1
 7ac:	18 95       	reti

000007ae <DC_MOTOR>:
 7ae:	1f 93       	push	r17
 7b0:	cf 93       	push	r28
 7b2:	df 93       	push	r29
 7b4:	c8 2f       	mov	r28, r24
 7b6:	d6 2f       	mov	r29, r22
 7b8:	14 2f       	mov	r17, r20
 7ba:	6f e0       	ldi	r22, 0x0F	; 15
 7bc:	8d 2f       	mov	r24, r29
 7be:	0e 94 ae 01 	call	0x35c	; 0x35c <DIO_set_port_direction>
 7c2:	c6 34       	cpi	r28, 0x46	; 70
 7c4:	41 f0       	breq	.+16     	; 0x7d6 <DC_MOTOR+0x28>
 7c6:	18 f4       	brcc	.+6      	; 0x7ce <DC_MOTOR+0x20>
 7c8:	c2 34       	cpi	r28, 0x42	; 66
 7ca:	51 f0       	breq	.+20     	; 0x7e0 <DC_MOTOR+0x32>
 7cc:	0d c0       	rjmp	.+26     	; 0x7e8 <DC_MOTOR+0x3a>
 7ce:	c2 36       	cpi	r28, 0x62	; 98
 7d0:	39 f0       	breq	.+14     	; 0x7e0 <DC_MOTOR+0x32>
 7d2:	c6 36       	cpi	r28, 0x66	; 102
 7d4:	49 f4       	brne	.+18     	; 0x7e8 <DC_MOTOR+0x3a>
 7d6:	65 e0       	ldi	r22, 0x05	; 5
 7d8:	8d 2f       	mov	r24, r29
 7da:	0e 94 c1 01 	call	0x382	; 0x382 <DIO_write_port>
 7de:	04 c0       	rjmp	.+8      	; 0x7e8 <DC_MOTOR+0x3a>
 7e0:	6a e0       	ldi	r22, 0x0A	; 10
 7e2:	8d 2f       	mov	r24, r29
 7e4:	0e 94 c1 01 	call	0x382	; 0x382 <DIO_write_port>
 7e8:	81 2f       	mov	r24, r17
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <Timer0_wave_PWM>
 7f0:	df 91       	pop	r29
 7f2:	cf 91       	pop	r28
 7f4:	1f 91       	pop	r17
 7f6:	08 95       	ret

000007f8 <Timer0_wave_PWM>:
    //no prescaling
    Set_bit(TCCR1B,CS10);
	//select non-inverting mode clear on compare match and set on bottom
	Set_bit(TCCR1A,COM1A1);
	Set_bit(TCCR1A,COM1B1);
}
 7f8:	27 b3       	in	r18, 0x17	; 23
 7fa:	28 60       	ori	r18, 0x08	; 8
 7fc:	27 bb       	out	0x17, r18	; 23
 7fe:	23 b7       	in	r18, 0x33	; 51
 800:	28 60       	ori	r18, 0x08	; 8
 802:	23 bf       	out	0x33, r18	; 51
 804:	23 b7       	in	r18, 0x33	; 51
 806:	20 64       	ori	r18, 0x40	; 64
 808:	23 bf       	out	0x33, r18	; 51
 80a:	2f ef       	ldi	r18, 0xFF	; 255
 80c:	ac 01       	movw	r20, r24
 80e:	24 9f       	mul	r18, r20
 810:	c0 01       	movw	r24, r0
 812:	25 9f       	mul	r18, r21
 814:	90 0d       	add	r25, r0
 816:	11 24       	eor	r1, r1
 818:	64 e6       	ldi	r22, 0x64	; 100
 81a:	70 e0       	ldi	r23, 0x00	; 0
 81c:	0e 94 a2 05 	call	0xb44	; 0xb44 <__divmodhi4>
 820:	6c bf       	out	0x3c, r22	; 60
 822:	83 b7       	in	r24, 0x33	; 51
 824:	81 60       	ori	r24, 0x01	; 1
 826:	83 bf       	out	0x33, r24	; 51
 828:	83 b7       	in	r24, 0x33	; 51
 82a:	82 60       	ori	r24, 0x02	; 2
 82c:	83 bf       	out	0x33, r24	; 51
 82e:	83 b7       	in	r24, 0x33	; 51
 830:	80 62       	ori	r24, 0x20	; 32
 832:	83 bf       	out	0x33, r24	; 51
 834:	83 b7       	in	r24, 0x33	; 51
 836:	8f 7e       	andi	r24, 0xEF	; 239
 838:	83 bf       	out	0x33, r24	; 51
 83a:	08 95       	ret

0000083c <Timer1_FastPWM_OC1B>:

void Timer1_FastPWM_OC1B(float sub_SERVO)
{
	//set OC1B as output pin
	Set_bit(DDRD,4);
 83c:	21 b3       	in	r18, 0x11	; 17
 83e:	20 61       	ori	r18, 0x10	; 16
 840:	21 bb       	out	0x11, r18	; 17

	//select Fast PWM ,TOP =OCR1A
	Set_bit(TCCR1A,WGM10);
 842:	2f b5       	in	r18, 0x2f	; 47
 844:	21 60       	ori	r18, 0x01	; 1
 846:	2f bd       	out	0x2f, r18	; 47
	Set_bit(TCCR1A,WGM11);
 848:	2f b5       	in	r18, 0x2f	; 47
 84a:	22 60       	ori	r18, 0x02	; 2
 84c:	2f bd       	out	0x2f, r18	; 47
	Set_bit(TCCR1B,WGM12);
 84e:	2e b5       	in	r18, 0x2e	; 46
 850:	28 60       	ori	r18, 0x08	; 8
 852:	2e bd       	out	0x2e, r18	; 46
	Set_bit(TCCR1B,WGM13);
 854:	2e b5       	in	r18, 0x2e	; 46
 856:	20 61       	ori	r18, 0x10	; 16
 858:	2e bd       	out	0x2e, r18	; 46
	
	OCR1A=19999;//PW REPEATED EACH 20 ms
 85a:	2f e1       	ldi	r18, 0x1F	; 31
 85c:	3e e4       	ldi	r19, 0x4E	; 78
 85e:	3b bd       	out	0x2b, r19	; 43
 860:	2a bd       	out	0x2a, r18	; 42
    OCR1B= 1500 + sub_SERVO*(5.55556);//5.555556 micro seconds needed for one degree
 862:	26 e2       	ldi	r18, 0x26	; 38
 864:	37 ec       	ldi	r19, 0xC7	; 199
 866:	41 eb       	ldi	r20, 0xB1	; 177
 868:	50 e4       	ldi	r21, 0x40	; 64
 86a:	0e 94 35 05 	call	0xa6a	; 0xa6a <__mulsf3>
 86e:	20 e0       	ldi	r18, 0x00	; 0
 870:	30 e8       	ldi	r19, 0x80	; 128
 872:	4b eb       	ldi	r20, 0xBB	; 187
 874:	54 e4       	ldi	r21, 0x44	; 68
 876:	0e 94 49 04 	call	0x892	; 0x892 <__addsf3>
 87a:	0e 94 b5 04 	call	0x96a	; 0x96a <__fixunssfsi>
 87e:	79 bd       	out	0x29, r23	; 41
 880:	68 bd       	out	0x28, r22	; 40
	
    //no prescaling
	Set_bit(TCCR1B,CS10);
 882:	8e b5       	in	r24, 0x2e	; 46
 884:	81 60       	ori	r24, 0x01	; 1
 886:	8e bd       	out	0x2e, r24	; 46
    //select non-inverting mode clear on compare match and set on bottom
    Set_bit(TCCR1A,COM1B1);
 888:	8f b5       	in	r24, 0x2f	; 47
 88a:	80 62       	ori	r24, 0x20	; 32
 88c:	8f bd       	out	0x2f, r24	; 47
 88e:	08 95       	ret

00000890 <__subsf3>:
 890:	50 58       	subi	r21, 0x80	; 128

00000892 <__addsf3>:
 892:	bb 27       	eor	r27, r27
 894:	aa 27       	eor	r26, r26
 896:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__addsf3x>
 89a:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <__fp_round>
 89e:	0e 94 ed 04 	call	0x9da	; 0x9da <__fp_pscA>
 8a2:	38 f0       	brcs	.+14     	; 0x8b2 <__addsf3+0x20>
 8a4:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <__fp_pscB>
 8a8:	20 f0       	brcs	.+8      	; 0x8b2 <__addsf3+0x20>
 8aa:	39 f4       	brne	.+14     	; 0x8ba <__addsf3+0x28>
 8ac:	9f 3f       	cpi	r25, 0xFF	; 255
 8ae:	19 f4       	brne	.+6      	; 0x8b6 <__addsf3+0x24>
 8b0:	26 f4       	brtc	.+8      	; 0x8ba <__addsf3+0x28>
 8b2:	0c 94 ea 04 	jmp	0x9d4	; 0x9d4 <__fp_nan>
 8b6:	0e f4       	brtc	.+2      	; 0x8ba <__addsf3+0x28>
 8b8:	e0 95       	com	r30
 8ba:	e7 fb       	bst	r30, 7
 8bc:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <__fp_inf>

000008c0 <__addsf3x>:
 8c0:	e9 2f       	mov	r30, r25
 8c2:	0e 94 0c 05 	call	0xa18	; 0xa18 <__fp_split3>
 8c6:	58 f3       	brcs	.-42     	; 0x89e <__addsf3+0xc>
 8c8:	ba 17       	cp	r27, r26
 8ca:	62 07       	cpc	r22, r18
 8cc:	73 07       	cpc	r23, r19
 8ce:	84 07       	cpc	r24, r20
 8d0:	95 07       	cpc	r25, r21
 8d2:	20 f0       	brcs	.+8      	; 0x8dc <__addsf3x+0x1c>
 8d4:	79 f4       	brne	.+30     	; 0x8f4 <__addsf3x+0x34>
 8d6:	a6 f5       	brtc	.+104    	; 0x940 <__addsf3x+0x80>
 8d8:	0c 94 2e 05 	jmp	0xa5c	; 0xa5c <__fp_zero>
 8dc:	0e f4       	brtc	.+2      	; 0x8e0 <__addsf3x+0x20>
 8de:	e0 95       	com	r30
 8e0:	0b 2e       	mov	r0, r27
 8e2:	ba 2f       	mov	r27, r26
 8e4:	a0 2d       	mov	r26, r0
 8e6:	0b 01       	movw	r0, r22
 8e8:	b9 01       	movw	r22, r18
 8ea:	90 01       	movw	r18, r0
 8ec:	0c 01       	movw	r0, r24
 8ee:	ca 01       	movw	r24, r20
 8f0:	a0 01       	movw	r20, r0
 8f2:	11 24       	eor	r1, r1
 8f4:	ff 27       	eor	r31, r31
 8f6:	59 1b       	sub	r21, r25
 8f8:	99 f0       	breq	.+38     	; 0x920 <__addsf3x+0x60>
 8fa:	59 3f       	cpi	r21, 0xF9	; 249
 8fc:	50 f4       	brcc	.+20     	; 0x912 <__addsf3x+0x52>
 8fe:	50 3e       	cpi	r21, 0xE0	; 224
 900:	68 f1       	brcs	.+90     	; 0x95c <__addsf3x+0x9c>
 902:	1a 16       	cp	r1, r26
 904:	f0 40       	sbci	r31, 0x00	; 0
 906:	a2 2f       	mov	r26, r18
 908:	23 2f       	mov	r18, r19
 90a:	34 2f       	mov	r19, r20
 90c:	44 27       	eor	r20, r20
 90e:	58 5f       	subi	r21, 0xF8	; 248
 910:	f3 cf       	rjmp	.-26     	; 0x8f8 <__addsf3x+0x38>
 912:	46 95       	lsr	r20
 914:	37 95       	ror	r19
 916:	27 95       	ror	r18
 918:	a7 95       	ror	r26
 91a:	f0 40       	sbci	r31, 0x00	; 0
 91c:	53 95       	inc	r21
 91e:	c9 f7       	brne	.-14     	; 0x912 <__addsf3x+0x52>
 920:	7e f4       	brtc	.+30     	; 0x940 <__addsf3x+0x80>
 922:	1f 16       	cp	r1, r31
 924:	ba 0b       	sbc	r27, r26
 926:	62 0b       	sbc	r22, r18
 928:	73 0b       	sbc	r23, r19
 92a:	84 0b       	sbc	r24, r20
 92c:	ba f0       	brmi	.+46     	; 0x95c <__addsf3x+0x9c>
 92e:	91 50       	subi	r25, 0x01	; 1
 930:	a1 f0       	breq	.+40     	; 0x95a <__addsf3x+0x9a>
 932:	ff 0f       	add	r31, r31
 934:	bb 1f       	adc	r27, r27
 936:	66 1f       	adc	r22, r22
 938:	77 1f       	adc	r23, r23
 93a:	88 1f       	adc	r24, r24
 93c:	c2 f7       	brpl	.-16     	; 0x92e <__addsf3x+0x6e>
 93e:	0e c0       	rjmp	.+28     	; 0x95c <__addsf3x+0x9c>
 940:	ba 0f       	add	r27, r26
 942:	62 1f       	adc	r22, r18
 944:	73 1f       	adc	r23, r19
 946:	84 1f       	adc	r24, r20
 948:	48 f4       	brcc	.+18     	; 0x95c <__addsf3x+0x9c>
 94a:	87 95       	ror	r24
 94c:	77 95       	ror	r23
 94e:	67 95       	ror	r22
 950:	b7 95       	ror	r27
 952:	f7 95       	ror	r31
 954:	9e 3f       	cpi	r25, 0xFE	; 254
 956:	08 f0       	brcs	.+2      	; 0x95a <__addsf3x+0x9a>
 958:	b0 cf       	rjmp	.-160    	; 0x8ba <__addsf3+0x28>
 95a:	93 95       	inc	r25
 95c:	88 0f       	add	r24, r24
 95e:	08 f0       	brcs	.+2      	; 0x962 <__addsf3x+0xa2>
 960:	99 27       	eor	r25, r25
 962:	ee 0f       	add	r30, r30
 964:	97 95       	ror	r25
 966:	87 95       	ror	r24
 968:	08 95       	ret

0000096a <__fixunssfsi>:
 96a:	0e 94 14 05 	call	0xa28	; 0xa28 <__fp_splitA>
 96e:	88 f0       	brcs	.+34     	; 0x992 <__fixunssfsi+0x28>
 970:	9f 57       	subi	r25, 0x7F	; 127
 972:	98 f0       	brcs	.+38     	; 0x99a <__fixunssfsi+0x30>
 974:	b9 2f       	mov	r27, r25
 976:	99 27       	eor	r25, r25
 978:	b7 51       	subi	r27, 0x17	; 23
 97a:	b0 f0       	brcs	.+44     	; 0x9a8 <__fixunssfsi+0x3e>
 97c:	e1 f0       	breq	.+56     	; 0x9b6 <__fixunssfsi+0x4c>
 97e:	66 0f       	add	r22, r22
 980:	77 1f       	adc	r23, r23
 982:	88 1f       	adc	r24, r24
 984:	99 1f       	adc	r25, r25
 986:	1a f0       	brmi	.+6      	; 0x98e <__fixunssfsi+0x24>
 988:	ba 95       	dec	r27
 98a:	c9 f7       	brne	.-14     	; 0x97e <__fixunssfsi+0x14>
 98c:	14 c0       	rjmp	.+40     	; 0x9b6 <__fixunssfsi+0x4c>
 98e:	b1 30       	cpi	r27, 0x01	; 1
 990:	91 f0       	breq	.+36     	; 0x9b6 <__fixunssfsi+0x4c>
 992:	0e 94 2e 05 	call	0xa5c	; 0xa5c <__fp_zero>
 996:	b1 e0       	ldi	r27, 0x01	; 1
 998:	08 95       	ret
 99a:	0c 94 2e 05 	jmp	0xa5c	; 0xa5c <__fp_zero>
 99e:	67 2f       	mov	r22, r23
 9a0:	78 2f       	mov	r23, r24
 9a2:	88 27       	eor	r24, r24
 9a4:	b8 5f       	subi	r27, 0xF8	; 248
 9a6:	39 f0       	breq	.+14     	; 0x9b6 <__fixunssfsi+0x4c>
 9a8:	b9 3f       	cpi	r27, 0xF9	; 249
 9aa:	cc f3       	brlt	.-14     	; 0x99e <__fixunssfsi+0x34>
 9ac:	86 95       	lsr	r24
 9ae:	77 95       	ror	r23
 9b0:	67 95       	ror	r22
 9b2:	b3 95       	inc	r27
 9b4:	d9 f7       	brne	.-10     	; 0x9ac <__fixunssfsi+0x42>
 9b6:	3e f4       	brtc	.+14     	; 0x9c6 <__fixunssfsi+0x5c>
 9b8:	90 95       	com	r25
 9ba:	80 95       	com	r24
 9bc:	70 95       	com	r23
 9be:	61 95       	neg	r22
 9c0:	7f 4f       	sbci	r23, 0xFF	; 255
 9c2:	8f 4f       	sbci	r24, 0xFF	; 255
 9c4:	9f 4f       	sbci	r25, 0xFF	; 255
 9c6:	08 95       	ret

000009c8 <__fp_inf>:
 9c8:	97 f9       	bld	r25, 7
 9ca:	9f 67       	ori	r25, 0x7F	; 127
 9cc:	80 e8       	ldi	r24, 0x80	; 128
 9ce:	70 e0       	ldi	r23, 0x00	; 0
 9d0:	60 e0       	ldi	r22, 0x00	; 0
 9d2:	08 95       	ret

000009d4 <__fp_nan>:
 9d4:	9f ef       	ldi	r25, 0xFF	; 255
 9d6:	80 ec       	ldi	r24, 0xC0	; 192
 9d8:	08 95       	ret

000009da <__fp_pscA>:
 9da:	00 24       	eor	r0, r0
 9dc:	0a 94       	dec	r0
 9de:	16 16       	cp	r1, r22
 9e0:	17 06       	cpc	r1, r23
 9e2:	18 06       	cpc	r1, r24
 9e4:	09 06       	cpc	r0, r25
 9e6:	08 95       	ret

000009e8 <__fp_pscB>:
 9e8:	00 24       	eor	r0, r0
 9ea:	0a 94       	dec	r0
 9ec:	12 16       	cp	r1, r18
 9ee:	13 06       	cpc	r1, r19
 9f0:	14 06       	cpc	r1, r20
 9f2:	05 06       	cpc	r0, r21
 9f4:	08 95       	ret

000009f6 <__fp_round>:
 9f6:	09 2e       	mov	r0, r25
 9f8:	03 94       	inc	r0
 9fa:	00 0c       	add	r0, r0
 9fc:	11 f4       	brne	.+4      	; 0xa02 <__fp_round+0xc>
 9fe:	88 23       	and	r24, r24
 a00:	52 f0       	brmi	.+20     	; 0xa16 <__fp_round+0x20>
 a02:	bb 0f       	add	r27, r27
 a04:	40 f4       	brcc	.+16     	; 0xa16 <__fp_round+0x20>
 a06:	bf 2b       	or	r27, r31
 a08:	11 f4       	brne	.+4      	; 0xa0e <__fp_round+0x18>
 a0a:	60 ff       	sbrs	r22, 0
 a0c:	04 c0       	rjmp	.+8      	; 0xa16 <__fp_round+0x20>
 a0e:	6f 5f       	subi	r22, 0xFF	; 255
 a10:	7f 4f       	sbci	r23, 0xFF	; 255
 a12:	8f 4f       	sbci	r24, 0xFF	; 255
 a14:	9f 4f       	sbci	r25, 0xFF	; 255
 a16:	08 95       	ret

00000a18 <__fp_split3>:
 a18:	57 fd       	sbrc	r21, 7
 a1a:	90 58       	subi	r25, 0x80	; 128
 a1c:	44 0f       	add	r20, r20
 a1e:	55 1f       	adc	r21, r21
 a20:	59 f0       	breq	.+22     	; 0xa38 <__fp_splitA+0x10>
 a22:	5f 3f       	cpi	r21, 0xFF	; 255
 a24:	71 f0       	breq	.+28     	; 0xa42 <__fp_splitA+0x1a>
 a26:	47 95       	ror	r20

00000a28 <__fp_splitA>:
 a28:	88 0f       	add	r24, r24
 a2a:	97 fb       	bst	r25, 7
 a2c:	99 1f       	adc	r25, r25
 a2e:	61 f0       	breq	.+24     	; 0xa48 <__fp_splitA+0x20>
 a30:	9f 3f       	cpi	r25, 0xFF	; 255
 a32:	79 f0       	breq	.+30     	; 0xa52 <__fp_splitA+0x2a>
 a34:	87 95       	ror	r24
 a36:	08 95       	ret
 a38:	12 16       	cp	r1, r18
 a3a:	13 06       	cpc	r1, r19
 a3c:	14 06       	cpc	r1, r20
 a3e:	55 1f       	adc	r21, r21
 a40:	f2 cf       	rjmp	.-28     	; 0xa26 <__fp_split3+0xe>
 a42:	46 95       	lsr	r20
 a44:	f1 df       	rcall	.-30     	; 0xa28 <__fp_splitA>
 a46:	08 c0       	rjmp	.+16     	; 0xa58 <__fp_splitA+0x30>
 a48:	16 16       	cp	r1, r22
 a4a:	17 06       	cpc	r1, r23
 a4c:	18 06       	cpc	r1, r24
 a4e:	99 1f       	adc	r25, r25
 a50:	f1 cf       	rjmp	.-30     	; 0xa34 <__fp_splitA+0xc>
 a52:	86 95       	lsr	r24
 a54:	71 05       	cpc	r23, r1
 a56:	61 05       	cpc	r22, r1
 a58:	08 94       	sec
 a5a:	08 95       	ret

00000a5c <__fp_zero>:
 a5c:	e8 94       	clt

00000a5e <__fp_szero>:
 a5e:	bb 27       	eor	r27, r27
 a60:	66 27       	eor	r22, r22
 a62:	77 27       	eor	r23, r23
 a64:	cb 01       	movw	r24, r22
 a66:	97 f9       	bld	r25, 7
 a68:	08 95       	ret

00000a6a <__mulsf3>:
 a6a:	0e 94 48 05 	call	0xa90	; 0xa90 <__mulsf3x>
 a6e:	0c 94 fb 04 	jmp	0x9f6	; 0x9f6 <__fp_round>
 a72:	0e 94 ed 04 	call	0x9da	; 0x9da <__fp_pscA>
 a76:	38 f0       	brcs	.+14     	; 0xa86 <__mulsf3+0x1c>
 a78:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <__fp_pscB>
 a7c:	20 f0       	brcs	.+8      	; 0xa86 <__mulsf3+0x1c>
 a7e:	95 23       	and	r25, r21
 a80:	11 f0       	breq	.+4      	; 0xa86 <__mulsf3+0x1c>
 a82:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <__fp_inf>
 a86:	0c 94 ea 04 	jmp	0x9d4	; 0x9d4 <__fp_nan>
 a8a:	11 24       	eor	r1, r1
 a8c:	0c 94 2f 05 	jmp	0xa5e	; 0xa5e <__fp_szero>

00000a90 <__mulsf3x>:
 a90:	0e 94 0c 05 	call	0xa18	; 0xa18 <__fp_split3>
 a94:	70 f3       	brcs	.-36     	; 0xa72 <__mulsf3+0x8>

00000a96 <__mulsf3_pse>:
 a96:	95 9f       	mul	r25, r21
 a98:	c1 f3       	breq	.-16     	; 0xa8a <__mulsf3+0x20>
 a9a:	95 0f       	add	r25, r21
 a9c:	50 e0       	ldi	r21, 0x00	; 0
 a9e:	55 1f       	adc	r21, r21
 aa0:	62 9f       	mul	r22, r18
 aa2:	f0 01       	movw	r30, r0
 aa4:	72 9f       	mul	r23, r18
 aa6:	bb 27       	eor	r27, r27
 aa8:	f0 0d       	add	r31, r0
 aaa:	b1 1d       	adc	r27, r1
 aac:	63 9f       	mul	r22, r19
 aae:	aa 27       	eor	r26, r26
 ab0:	f0 0d       	add	r31, r0
 ab2:	b1 1d       	adc	r27, r1
 ab4:	aa 1f       	adc	r26, r26
 ab6:	64 9f       	mul	r22, r20
 ab8:	66 27       	eor	r22, r22
 aba:	b0 0d       	add	r27, r0
 abc:	a1 1d       	adc	r26, r1
 abe:	66 1f       	adc	r22, r22
 ac0:	82 9f       	mul	r24, r18
 ac2:	22 27       	eor	r18, r18
 ac4:	b0 0d       	add	r27, r0
 ac6:	a1 1d       	adc	r26, r1
 ac8:	62 1f       	adc	r22, r18
 aca:	73 9f       	mul	r23, r19
 acc:	b0 0d       	add	r27, r0
 ace:	a1 1d       	adc	r26, r1
 ad0:	62 1f       	adc	r22, r18
 ad2:	83 9f       	mul	r24, r19
 ad4:	a0 0d       	add	r26, r0
 ad6:	61 1d       	adc	r22, r1
 ad8:	22 1f       	adc	r18, r18
 ada:	74 9f       	mul	r23, r20
 adc:	33 27       	eor	r19, r19
 ade:	a0 0d       	add	r26, r0
 ae0:	61 1d       	adc	r22, r1
 ae2:	23 1f       	adc	r18, r19
 ae4:	84 9f       	mul	r24, r20
 ae6:	60 0d       	add	r22, r0
 ae8:	21 1d       	adc	r18, r1
 aea:	82 2f       	mov	r24, r18
 aec:	76 2f       	mov	r23, r22
 aee:	6a 2f       	mov	r22, r26
 af0:	11 24       	eor	r1, r1
 af2:	9f 57       	subi	r25, 0x7F	; 127
 af4:	50 40       	sbci	r21, 0x00	; 0
 af6:	9a f0       	brmi	.+38     	; 0xb1e <__mulsf3_pse+0x88>
 af8:	f1 f0       	breq	.+60     	; 0xb36 <__mulsf3_pse+0xa0>
 afa:	88 23       	and	r24, r24
 afc:	4a f0       	brmi	.+18     	; 0xb10 <__mulsf3_pse+0x7a>
 afe:	ee 0f       	add	r30, r30
 b00:	ff 1f       	adc	r31, r31
 b02:	bb 1f       	adc	r27, r27
 b04:	66 1f       	adc	r22, r22
 b06:	77 1f       	adc	r23, r23
 b08:	88 1f       	adc	r24, r24
 b0a:	91 50       	subi	r25, 0x01	; 1
 b0c:	50 40       	sbci	r21, 0x00	; 0
 b0e:	a9 f7       	brne	.-22     	; 0xafa <__mulsf3_pse+0x64>
 b10:	9e 3f       	cpi	r25, 0xFE	; 254
 b12:	51 05       	cpc	r21, r1
 b14:	80 f0       	brcs	.+32     	; 0xb36 <__mulsf3_pse+0xa0>
 b16:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <__fp_inf>
 b1a:	0c 94 2f 05 	jmp	0xa5e	; 0xa5e <__fp_szero>
 b1e:	5f 3f       	cpi	r21, 0xFF	; 255
 b20:	e4 f3       	brlt	.-8      	; 0xb1a <__mulsf3_pse+0x84>
 b22:	98 3e       	cpi	r25, 0xE8	; 232
 b24:	d4 f3       	brlt	.-12     	; 0xb1a <__mulsf3_pse+0x84>
 b26:	86 95       	lsr	r24
 b28:	77 95       	ror	r23
 b2a:	67 95       	ror	r22
 b2c:	b7 95       	ror	r27
 b2e:	f7 95       	ror	r31
 b30:	e7 95       	ror	r30
 b32:	9f 5f       	subi	r25, 0xFF	; 255
 b34:	c1 f7       	brne	.-16     	; 0xb26 <__mulsf3_pse+0x90>
 b36:	fe 2b       	or	r31, r30
 b38:	88 0f       	add	r24, r24
 b3a:	91 1d       	adc	r25, r1
 b3c:	96 95       	lsr	r25
 b3e:	87 95       	ror	r24
 b40:	97 f9       	bld	r25, 7
 b42:	08 95       	ret

00000b44 <__divmodhi4>:
 b44:	97 fb       	bst	r25, 7
 b46:	07 2e       	mov	r0, r23
 b48:	16 f4       	brtc	.+4      	; 0xb4e <__divmodhi4+0xa>
 b4a:	00 94       	com	r0
 b4c:	07 d0       	rcall	.+14     	; 0xb5c <__divmodhi4_neg1>
 b4e:	77 fd       	sbrc	r23, 7
 b50:	09 d0       	rcall	.+18     	; 0xb64 <__divmodhi4_neg2>
 b52:	0e 94 ed 05 	call	0xbda	; 0xbda <__udivmodhi4>
 b56:	07 fc       	sbrc	r0, 7
 b58:	05 d0       	rcall	.+10     	; 0xb64 <__divmodhi4_neg2>
 b5a:	3e f4       	brtc	.+14     	; 0xb6a <__divmodhi4_exit>

00000b5c <__divmodhi4_neg1>:
 b5c:	90 95       	com	r25
 b5e:	81 95       	neg	r24
 b60:	9f 4f       	sbci	r25, 0xFF	; 255
 b62:	08 95       	ret

00000b64 <__divmodhi4_neg2>:
 b64:	70 95       	com	r23
 b66:	61 95       	neg	r22
 b68:	7f 4f       	sbci	r23, 0xFF	; 255

00000b6a <__divmodhi4_exit>:
 b6a:	08 95       	ret

00000b6c <__udivmodsi4>:
 b6c:	a1 e2       	ldi	r26, 0x21	; 33
 b6e:	1a 2e       	mov	r1, r26
 b70:	aa 1b       	sub	r26, r26
 b72:	bb 1b       	sub	r27, r27
 b74:	fd 01       	movw	r30, r26
 b76:	0d c0       	rjmp	.+26     	; 0xb92 <__udivmodsi4_ep>

00000b78 <__udivmodsi4_loop>:
 b78:	aa 1f       	adc	r26, r26
 b7a:	bb 1f       	adc	r27, r27
 b7c:	ee 1f       	adc	r30, r30
 b7e:	ff 1f       	adc	r31, r31
 b80:	a2 17       	cp	r26, r18
 b82:	b3 07       	cpc	r27, r19
 b84:	e4 07       	cpc	r30, r20
 b86:	f5 07       	cpc	r31, r21
 b88:	20 f0       	brcs	.+8      	; 0xb92 <__udivmodsi4_ep>
 b8a:	a2 1b       	sub	r26, r18
 b8c:	b3 0b       	sbc	r27, r19
 b8e:	e4 0b       	sbc	r30, r20
 b90:	f5 0b       	sbc	r31, r21

00000b92 <__udivmodsi4_ep>:
 b92:	66 1f       	adc	r22, r22
 b94:	77 1f       	adc	r23, r23
 b96:	88 1f       	adc	r24, r24
 b98:	99 1f       	adc	r25, r25
 b9a:	1a 94       	dec	r1
 b9c:	69 f7       	brne	.-38     	; 0xb78 <__udivmodsi4_loop>
 b9e:	60 95       	com	r22
 ba0:	70 95       	com	r23
 ba2:	80 95       	com	r24
 ba4:	90 95       	com	r25
 ba6:	9b 01       	movw	r18, r22
 ba8:	ac 01       	movw	r20, r24
 baa:	bd 01       	movw	r22, r26
 bac:	cf 01       	movw	r24, r30
 bae:	08 95       	ret

00000bb0 <__tablejump2__>:
 bb0:	ee 0f       	add	r30, r30
 bb2:	ff 1f       	adc	r31, r31
 bb4:	05 90       	lpm	r0, Z+
 bb6:	f4 91       	lpm	r31, Z
 bb8:	e0 2d       	mov	r30, r0
 bba:	09 94       	ijmp

00000bbc <__umulhisi3>:
 bbc:	a2 9f       	mul	r26, r18
 bbe:	b0 01       	movw	r22, r0
 bc0:	b3 9f       	mul	r27, r19
 bc2:	c0 01       	movw	r24, r0
 bc4:	a3 9f       	mul	r26, r19
 bc6:	70 0d       	add	r23, r0
 bc8:	81 1d       	adc	r24, r1
 bca:	11 24       	eor	r1, r1
 bcc:	91 1d       	adc	r25, r1
 bce:	b2 9f       	mul	r27, r18
 bd0:	70 0d       	add	r23, r0
 bd2:	81 1d       	adc	r24, r1
 bd4:	11 24       	eor	r1, r1
 bd6:	91 1d       	adc	r25, r1
 bd8:	08 95       	ret

00000bda <__udivmodhi4>:
 bda:	aa 1b       	sub	r26, r26
 bdc:	bb 1b       	sub	r27, r27
 bde:	51 e1       	ldi	r21, 0x11	; 17
 be0:	07 c0       	rjmp	.+14     	; 0xbf0 <__udivmodhi4_ep>

00000be2 <__udivmodhi4_loop>:
 be2:	aa 1f       	adc	r26, r26
 be4:	bb 1f       	adc	r27, r27
 be6:	a6 17       	cp	r26, r22
 be8:	b7 07       	cpc	r27, r23
 bea:	10 f0       	brcs	.+4      	; 0xbf0 <__udivmodhi4_ep>
 bec:	a6 1b       	sub	r26, r22
 bee:	b7 0b       	sbc	r27, r23

00000bf0 <__udivmodhi4_ep>:
 bf0:	88 1f       	adc	r24, r24
 bf2:	99 1f       	adc	r25, r25
 bf4:	5a 95       	dec	r21
 bf6:	a9 f7       	brne	.-22     	; 0xbe2 <__udivmodhi4_loop>
 bf8:	80 95       	com	r24
 bfa:	90 95       	com	r25
 bfc:	bc 01       	movw	r22, r24
 bfe:	cd 01       	movw	r24, r26
 c00:	08 95       	ret

00000c02 <_exit>:
 c02:	f8 94       	cli

00000c04 <__stop_program>:
 c04:	ff cf       	rjmp	.-2      	; 0xc04 <__stop_program>
